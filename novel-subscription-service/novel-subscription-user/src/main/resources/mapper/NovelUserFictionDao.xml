<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.alexmmd.repository.NovelUserFictionDao">

    <resultMap type="top.alexmmd.domain.NovelUserFiction" id="NovelUserFictionMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="username" column="username" jdbcType="VARCHAR"/>
        <result property="email" column="email" jdbcType="VARCHAR"/>
        <result property="novelId" column="novel_id" jdbcType="INTEGER"/>
        <result property="novelName" column="novel_name" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="NovelUserFictionMap">
        select
          id, user_id, username, email, novel_id, novel_name, create_time, update_time
        from novel_subscription.novel_user_fiction
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="NovelUserFictionMap">
        select
          id, user_id, username, email, novel_id, novel_name, create_time, update_time
        from novel_subscription.novel_user_fiction
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="NovelUserFictionMap">
        select
          id, user_id, username, email, novel_id, novel_name, create_time, update_time
        from novel_subscription.novel_user_fiction
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null">
                and user_id = #{userId}
            </if>
            <if test="username != null and username != ''">
                and username = #{username}
            </if>
            <if test="email != null and email != ''">
                and email = #{email}
            </if>
            <if test="novelId != null">
                and novel_id = #{novelId}
            </if>
            <if test="novelName != null and novelName != ''">
                and novel_name = #{novelName}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.novel_user_fiction(user_id, username, email, novel_id, novel_name, create_time, update_time)
        values (#{userId}, #{username}, #{email}, #{novelId}, #{novelName}, #{createTime}, #{updateTime})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update novel_subscription.novel_user_fiction
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="username != null and username != ''">
                username = #{username},
            </if>
            <if test="email != null and email != ''">
                email = #{email},
            </if>
            <if test="novelId != null">
                novel_id = #{novelId},
            </if>
            <if test="novelName != null and novelName != ''">
                novel_name = #{novelName},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from novel_subscription.novel_user_fiction where id = #{id}
    </delete>

</mapper>