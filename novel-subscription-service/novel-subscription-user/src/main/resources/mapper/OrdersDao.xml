<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.alexmmd.repository.OrdersDao">

    <resultMap type="top.alexmmd.domain.entity.Orders" id="OrdersMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="userId" column="user_id" jdbcType="INTEGER"/>
        <result property="receiverName" column="receiver_name" jdbcType="VARCHAR"/>
        <result property="receiverMobile" column="receiver_mobile" jdbcType="VARCHAR"/>
        <result property="receiverAddress" column="receiver_address" jdbcType="VARCHAR"/>
        <result property="totalAmount" column="total_amount" jdbcType="INTEGER"/>
        <result property="realPayAmount" column="real_pay_amount" jdbcType="INTEGER"/>
        <result property="postAmount" column="post_amount" jdbcType="INTEGER"/>
        <result property="payMethod" column="pay_method" jdbcType="INTEGER"/>
        <result property="isDelete" column="is_delete" jdbcType="INTEGER"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrdersMap">
        select
          id, user_id, receiver_name, receiver_mobile, receiver_address, total_amount, real_pay_amount, post_amount, pay_method, is_delete, create_time, update_time
        from novel_subscription.orders
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrdersMap">
        select
          id, user_id, receiver_name, receiver_mobile, receiver_address, total_amount, real_pay_amount, post_amount, pay_method, is_delete, create_time, update_time
        from novel_subscription.orders
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrdersMap">
        select
        id, user_id, receiver_name, receiver_mobile, receiver_address, total_amount, real_pay_amount, post_amount,
        pay_method, is_delete, create_time, update_time
        from novel_subscription.orders
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="userId != null and userId != ''">
                and user_id = #{userId}
            </if>
            <if test="receiverName != null and receiverName != ''">
                and receiver_name = #{receiverName}
            </if>
            <if test="receiverMobile != null and receiverMobile != ''">
                and receiver_mobile = #{receiverMobile}
            </if>
            <if test="receiverAddress != null and receiverAddress != ''">
                and receiver_address = #{receiverAddress}
            </if>
            <if test="totalAmount != null">
                and total_amount = #{totalAmount}
            </if>
            <if test="realPayAmount != null">
                and real_pay_amount = #{realPayAmount}
            </if>
            <if test="postAmount != null">
                and post_amount = #{postAmount}
            </if>
            <if test="payMethod != null">
                and pay_method = #{payMethod}
            </if>
            <if test="isDelete != null">
                and is_delete = #{isDelete}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
        order by create_time desc
    </select>

    <!--查询订单详情-->
    <select id="queryOrdersDetail" resultType="top.alexmmd.domain.vo.OrdersVo">
        SELECT
            a.`id` AS id,
            a.`user_id` AS userId,
            a.`receiver_name` AS receiverName,
            a.`receiver_mobile` AS receiverMobile,
            a.`receiver_address` AS receiverAddress,
            a.`total_amount` AS totalAmount,
            a.`real_pay_amount` AS realPayAmount,
            a.`post_amount` AS postAmount,
            a.`pay_method` AS payMethod,
            a.`is_delete` AS isDelete,
            a.`create_time` AS createTime,
            a.`update_time` AS updateTime
        FROM
            novel_subscription.`orders` AS a
        WHERE
            a.`id` = #{id}
    </select>

    <!--查询订单商品表-->
    <select id="queryOrderItemsVoByOrderId" resultType="top.alexmmd.domain.vo.OrderItemsVo">
        SELECT
            a.`id` AS id,
            a.`order_id` AS orderId,
            a.`item_id` AS itemId,
            a.`item_name` AS itemName,
            a.`price` AS price,
            a.`buy_counts` AS buyCounts,
            b.`cat_id` AS catId,
            b.`root_cat_id` AS rootCatId,
            b.`sell_counts` AS sellCounts,
            b.`on_off_status` AS onOffStatus,
            b.`content` AS content,
            b.`create_time` AS createTime,
            b.`update_time` AS updateTime,
            c.`name` AS catName,
            d.`name` AS rootCatName
        FROM
            novel_subscription.`order_items` AS a
            LEFT JOIN novel_subscription.`items` AS b ON a.`item_id` = b.`id`
            LEFT JOIN novel_subscription.`category` AS b ON b.`id` = a.`cat_id`
            LEFT JOIN novel_subscription.`category` AS c ON c.`id` = a.`root_cat_id`
        WHERE
            a.`order_id` = #{id}
    </select>

    <!--查询所有购买了此商品的人-->
    <select id="queryOrdersByItemId" resultType="top.alexmmd.domain.entity.Orders">
        SELECT
            a.`id` AS id,
            a.`user_id` AS userId,
            a.`receiver_name` AS receiverName,
            a.`receiver_mobile` AS receiverMobile,
            a.`receiver_address` AS receiverAddress,
            a.`total_amount` AS totalAmount,
            a.`real_pay_amount` AS realPayAmount,
            a.`post_amount` AS postAmount,
            a.`pay_method` AS payMethod,
            a.`is_delete` AS isDelete,
            a.`create_time` AS createTime,
            a.`update_time` AS updateTime
        FROM
            novel_subscription.`order_items` AS b
            LEFT JOIN novel_subscription.`orders` AS a ON a.`id` = b.`order_id`
        WHERE
            b.`item_id` = #{itemId}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.orders(user_id, receiver_name, receiver_mobile, receiver_address, total_amount, real_pay_amount, post_amount, pay_method, is_delete, create_time, update_time)
        values (#{userId}, #{receiverName}, #{receiverMobile}, #{receiverAddress}, #{totalAmount}, #{realPayAmount}, #{postAmount}, #{payMethod}, #{isDelete}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.orders(user_id, receiver_name, receiver_mobile, receiver_address, total_amount,
        real_pay_amount, post_amount, pay_method, is_delete, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.receiverName}, #{entity.receiverMobile}, #{entity.receiverAddress},
            #{entity.totalAmount}, #{entity.realPayAmount}, #{entity.postAmount}, #{entity.payMethod},
            #{entity.isDelete}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.orders(user_id, receiver_name, receiver_mobile, receiver_address, total_amount,
        real_pay_amount, post_amount, pay_method, is_delete, create_time, update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.userId}, #{entity.receiverName}, #{entity.receiverMobile}, #{entity.receiverAddress},
            #{entity.totalAmount}, #{entity.realPayAmount}, #{entity.postAmount}, #{entity.payMethod},
            #{entity.isDelete}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        user_id = values(user_id) , receiver_name = values(receiver_name) , receiver_mobile = values(receiver_mobile) ,
        receiver_address = values(receiver_address) , total_amount = values(total_amount) , real_pay_amount =
        values(real_pay_amount) , post_amount = values(post_amount) , pay_method = values(pay_method) , is_delete =
        values(is_delete) , create_time = values(create_time) , update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update novel_subscription.orders
        <set>
            <if test="userId != null">
                user_id = #{userId},
            </if>
            <if test="receiverName != null and receiverName != ''">
                receiver_name = #{receiverName},
            </if>
            <if test="receiverMobile != null and receiverMobile != ''">
                receiver_mobile = #{receiverMobile},
            </if>
            <if test="receiverAddress != null and receiverAddress != ''">
                receiver_address = #{receiverAddress},
            </if>
            <if test="totalAmount != null">
                total_amount = #{totalAmount},
            </if>
            <if test="realPayAmount != null">
                real_pay_amount = #{realPayAmount},
            </if>
            <if test="postAmount != null">
                post_amount = #{postAmount},
            </if>
            <if test="payMethod != null">
                pay_method = #{payMethod},
            </if>
            <if test="isDelete != null">
                is_delete = #{isDelete},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from novel_subscription.orders where id = #{id}
    </delete>

</mapper>