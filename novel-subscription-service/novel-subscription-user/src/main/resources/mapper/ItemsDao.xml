<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.alexmmd.repository.ItemsDao">

    <resultMap type="top.alexmmd.domain.entity.Items" id="ItemsMap">
        <result property="id" column="id" jdbcType="VARCHAR"/>
        <result property="itemName" column="item_name" jdbcType="VARCHAR"/>
        <result property="catId" column="cat_id" jdbcType="INTEGER"/>
        <result property="rootCatId" column="root_cat_id" jdbcType="INTEGER"/>
        <result property="sellCounts" column="sell_counts" jdbcType="INTEGER"/>
        <result property="onOffStatus" column="on_off_status" jdbcType="INTEGER"/>
        <result property="content" column="content" jdbcType="VARCHAR"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
        <result property="updateTime" column="update_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="ItemsMap">
        select
          id, item_name, cat_id, root_cat_id, sell_counts, on_off_status, content, create_time, update_time
        from novel_subscription.items
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="ItemsMap">
        select
          id, item_name, cat_id, root_cat_id, sell_counts, on_off_status, content, create_time, update_time
        from novel_subscription.items
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="ItemsMap">
        select
        id, item_name, cat_id, root_cat_id, sell_counts, on_off_status, content, create_time, update_time
        from novel_subscription.items
        <where>
            <if test="id != null and id != ''">
                and id = #{id}
            </if>
            <if test="itemName != null and itemName != ''">
                and item_name = #{itemName}
            </if>
            <if test="catId != null">
                and cat_id = #{catId}
            </if>
            <if test="rootCatId != null">
                and root_cat_id = #{rootCatId}
            </if>
            <if test="sellCounts != null">
                and sell_counts = #{sellCounts}
            </if>
            <if test="onOffStatus != null">
                and on_off_status = #{onOffStatus}
            </if>
            <if test="content != null and content != ''">
                and content = #{content}
            </if>
            <if test="createTime != null">
                and create_time = #{createTime}
            </if>
            <if test="updateTime != null">
                and update_time = #{updateTime}
            </if>
        </where>
    </select>

    <!--根据 id 查询详情-->
    <select id="queryDetailById" resultType="top.alexmmd.domain.vo.ItemsVo">
        SELECT
            a.`id` AS id,
            a.`item_name` AS itemName,
            a.`cat_id` AS catId,
            a.`root_cat_id` AS rootCatId,
            a.`sell_counts` AS sellCounts,
            a.`on_off_status` AS onOffStatus,
            a.`content` AS content,
            a.`create_time` AS createTime,
            a.`update_time` AS updateTime,
            b.`name` AS catName,
            c.`name` AS rootCatName
        FROM
            novel_subscription.`items` AS a
            LEFT JOIN novel_subscription.`category` AS b ON b.`id` = a.`cat_id`
            LEFT JOIN novel_subscription.`category` AS c ON c.`id` = a.`root_cat_id`
        WHERE
            a.`id` = 1
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.items(item_name, cat_id, root_cat_id, sell_counts, on_off_status, content, create_time, update_time)
        values (#{itemName}, #{catId}, #{rootCatId}, #{sellCounts}, #{onOffStatus}, #{content}, #{createTime}, #{updateTime})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.items(item_name, cat_id, root_cat_id, sell_counts, on_off_status, content, create_time,
        update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.itemName}, #{entity.catId}, #{entity.rootCatId}, #{entity.sellCounts}, #{entity.onOffStatus},
            #{entity.content}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.items(item_name, cat_id, root_cat_id, sell_counts, on_off_status, content, create_time,
        update_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.itemName}, #{entity.catId}, #{entity.rootCatId}, #{entity.sellCounts}, #{entity.onOffStatus},
            #{entity.content}, #{entity.createTime}, #{entity.updateTime})
        </foreach>
        on duplicate key update
        item_name = values(item_name) , cat_id = values(cat_id) , root_cat_id = values(root_cat_id) , sell_counts =
        values(sell_counts) , on_off_status = values(on_off_status) , content = values(content) , create_time =
        values(create_time) , update_time = values(update_time)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update novel_subscription.items
        <set>
            <if test="itemName != null and itemName != ''">
                item_name = #{itemName},
            </if>
            <if test="catId != null">
                cat_id = #{catId},
            </if>
            <if test="rootCatId != null">
                root_cat_id = #{rootCatId},
            </if>
            <if test="sellCounts != null">
                sell_counts = #{sellCounts},
            </if>
            <if test="onOffStatus != null">
                on_off_status = #{onOffStatus},
            </if>
            <if test="content != null and content != ''">
                content = #{content},
            </if>
            <if test="createTime != null">
                create_time = #{createTime},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from novel_subscription.items where id = #{id}
    </delete>

</mapper>