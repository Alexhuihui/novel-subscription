<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.alexmmd.repository.OrderItemsDao">

    <resultMap type="top.alexmmd.domain.entity.OrderItems" id="OrderItemsMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="orderId" column="order_id" jdbcType="VARCHAR"/>
        <result property="itemId" column="item_id" jdbcType="VARCHAR"/>
        <result property="itemName" column="item_name" jdbcType="VARCHAR"/>
        <result property="price" column="price" jdbcType="INTEGER"/>
        <result property="buyCounts" column="buy_counts" jdbcType="INTEGER"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="OrderItemsMap">
        select
          id, order_id, item_id, item_name, price, buy_counts
        from novel_subscription.order_items
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="OrderItemsMap">
        select
          id, order_id, item_id, item_name, price, buy_counts
        from novel_subscription.order_items
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="OrderItemsMap">
        select
        id, order_id, item_id, item_name, price, buy_counts
        from novel_subscription.order_items
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="orderId != null">
                and order_id = #{orderId}
            </if>
            <if test="itemId != null">
                and item_id = #{itemId}
            </if>
            <if test="itemName != null and itemName != ''">
                and item_name = #{itemName}
            </if>
            <if test="price != null">
                and price = #{price}
            </if>
            <if test="buyCounts != null">
                and buy_counts = #{buyCounts}
            </if>
        </where>
    </select>

    <!--根据订单 id 查询订单商品-->
    <select id="queryByOrderId" resultMap="OrderItemsMap">
        select
        id, order_id, item_id, item_name, price, buy_counts
        from novel_subscription.order_items
        where order_id = #{id}
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.order_items(order_id, item_id, item_name, price, buy_counts)
        values (#{orderId}, #{itemId}, #{itemName}, #{price}, #{buyCounts})
    </insert>

    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.order_items(order_id, item_id, item_name, price, buy_counts)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderId}, #{entity.itemId}, #{entity.itemName}, #{entity.price}, #{entity.buyCounts})
        </foreach>
    </insert>

    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.order_items(order_id, item_id, item_name, price, buy_counts)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.orderId}, #{entity.itemId}, #{entity.itemName}, #{entity.price}, #{entity.buyCounts})
        </foreach>
        on duplicate key update
        order_id = values(order_id) , item_id = values(item_id) , item_name = values(item_name) , price = values(price)
        , buy_counts = values(buy_counts)
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update novel_subscription.order_items
        <set>
            <if test="orderId != null">
                order_id = #{orderId},
            </if>
            <if test="itemId != null">
                item_id = #{itemId},
            </if>
            <if test="itemName != null and itemName != ''">
                item_name = #{itemName},
            </if>
            <if test="price != null">
                price = #{price},
            </if>
            <if test="buyCounts != null">
                buy_counts = #{buyCounts},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from novel_subscription.order_items where id = #{id}
    </delete>

    <!--根据订单 id 删除订单商品-->
    <delete id="deleteByOrdersId">
        delete from novel_subscription.order_items where order_id = #{orderId}
    </delete>

</mapper>