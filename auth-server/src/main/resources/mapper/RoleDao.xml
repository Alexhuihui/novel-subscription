<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="top.alexmmd.dao.RoleDao">

    <resultMap type="top.alexmmd.model.Role" id="RoleMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="name" column="name" jdbcType="VARCHAR"/>
    </resultMap>

    <!--查询单个-->
    <select id="queryById" resultMap="RoleMap">
        select
          id, name
        from novel_subscription.role
        where id = #{id}
    </select>

    <!--查询指定行数据-->
    <select id="queryAllByLimit" resultMap="RoleMap">
        select
          id, name
        from novel_subscription.role
        limit #{offset}, #{limit}
    </select>

    <!--通过实体作为筛选条件查询-->
    <select id="queryAll" resultMap="RoleMap">
        select
          id, name
        from novel_subscription.role
        <where>
            <if test="id != null">
                and id = #{id}
            </if>
            <if test="name != null and name != ''">
                and name = #{name}
            </if>
        </where>
    </select>

    <!--新增所有列-->
    <insert id="insert" keyProperty="id" useGeneratedKeys="true">
        insert into novel_subscription.role(name)
        values (#{name})
    </insert>

    <!--通过主键修改数据-->
    <update id="update">
        update novel_subscription.role
        <set>
            <if test="name != null and name != ''">
                name = #{name},
            </if>
        </set>
        where id = #{id}
    </update>

    <!--通过主键删除-->
    <delete id="deleteById">
        delete from novel_subscription.role where id = #{id}
    </delete>

    <select id="queryByRoleName" resultType="top.alexmmd.model.Role">
        select
          id, name
        from novel_subscription.role
        where name = #{name}
    </select>

    <select id="queryAllByUserId" resultType="top.alexmmd.model.RoleDetail">
        SELECT
            a.`role_id` AS roleId,
            a.`privilege_id` AS privilegeId,
            b.`name` AS roleName,
            c.`name` AS privilegeName,
            d.`user_id` AS userId
        FROM
            novel_subscription.`roles_privileges` AS a
            LEFT JOIN novel_subscription.`role` AS b ON b.`id` = a.`role_id`
            LEFT JOIN novel_subscription.`privilege` AS c ON c.`id` = a.`privilege_id`
            LEFT JOIN novel_subscription.`users_roles` AS d ON d.`role_id` = a.`role_id`
        WHERE
            d.`user_id` = #{id}
    </select>

</mapper>